; listing_0056_estimating_cycles disassembly
bits 16
mov bx, word 1000        ; [f0000] (+4  [ 4_ba + 0_tf * 4 + 0_ea])
mov bp, word 2000        ; [f0003] (+4  [ 4_ba + 0_tf * 4 + 0_ea])
mov si, word 3000        ; [f0006] (+4  [ 4_ba + 0_tf * 4 + 0_ea])
mov di, word 4000        ; [f0009] (+4  [ 4_ba + 0_tf * 4 + 0_ea])
mov cx, bx               ; [f000c] (+2  [ 2_ba + 0_tf * 4 + 0_ea])
mov dx, word 12          ; [f000e] (+4  [ 4_ba + 0_tf * 4 + 0_ea])
mov dx, [1000]           ; [f0011] (+15 [ 8_ba + 1_tf * 4 + 6_ea])
mov cx, [bx + 0]         ; [f0015] (+14 [ 8_ba + 1_tf * 4 + 5_ea])
mov cx, [bp + 0]         ; [f0017] (+14 [ 8_ba + 1_tf * 4 + 5_ea])
mov [si + 0], cx         ; [f001a] (+15 [ 9_ba + 1_tf * 4 + 5_ea])
mov [di + 0], cx         ; [f001c] (+15 [ 9_ba + 1_tf * 4 + 5_ea])
mov cx, [bx + 1000]      ; [f001e] (+18 [ 8_ba + 1_tf * 4 + 9_ea])
mov cx, [bp + 1000]      ; [f0022] (+18 [ 8_ba + 1_tf * 4 + 9_ea])
mov [si + 1000], cx      ; [f0026] (+19 [ 9_ba + 1_tf * 4 + 9_ea])
mov [di + 1000], cx      ; [f002a] (+19 [ 9_ba + 1_tf * 4 + 9_ea])
add cx, dx               ; [f002e] (+3  [ 3_ba + 0_tf * 4 + 0_ea])
add [di + 1000], cx      ; [f0030] (+23 [12_ba + 2_tf * 4 + 9_ea])
add dx, word 50          ; [f0034] (+4  [ 4_ba + 0_tf * 4 + 0_ea])